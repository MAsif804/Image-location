import { useState } from "react";
import { Link } from "react-router-dom";
import Navbar from "../components/Navbar";
import InputTig from "@/components/InputTig";
import { ImageIcon } from "lucide-react";

// Category options
const categories = [
  {
    id: "all",
    name: "All Spaces",
    renderIcon: (isActive: boolean) => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="25"
        viewBox="0 0 24 25"
        fill="none"
      >
        <g clip-path="url(#clip0_310_689)">
          <path
            d="M8.68947 1.99997C8.97076 1.71876 9.35223 1.56079 9.74997 1.56079C10.1477 1.56079 10.5292 1.71876 10.8105 1.99997L11.781 2.96897C11.9218 3.1098 12.0009 3.30081 12.0009 3.49997C12.0009 3.69913 11.9218 3.89014 11.781 4.03097C11.6401 4.1718 11.4491 4.25092 11.25 4.25092C11.0508 4.25092 10.8598 4.1718 10.719 4.03097L9.74997 3.06047L2.99997 9.81047V19.25C2.99997 19.4489 3.07899 19.6396 3.21964 19.7803C3.36029 19.921 3.55106 20 3.74997 20C3.94888 20 4.13965 20.079 4.2803 20.2196C4.42095 20.3603 4.49997 20.5511 4.49997 20.75C4.49997 20.9489 4.42095 21.1396 4.2803 21.2803C4.13965 21.421 3.94888 21.5 3.74997 21.5C3.15323 21.5 2.58094 21.2629 2.15898 20.841C1.73702 20.419 1.49997 19.8467 1.49997 19.25V11.3105L1.28097 11.531C1.14014 11.6718 0.949134 11.7509 0.749971 11.7509C0.550807 11.7509 0.359801 11.6718 0.218971 11.531C0.0781409 11.3901 -0.00097656 11.1991 -0.000976562 11C-0.000976565 10.8008 0.0781409 10.6098 0.218971 10.469L8.68947 1.99997ZM13.1895 3.49997C13.4708 3.21876 13.8522 3.06079 14.25 3.06079C14.6477 3.06079 15.0292 3.21876 15.3105 3.49997L18 6.18947V4.24997C18 4.05106 18.079 3.86029 18.2196 3.71964C18.3603 3.57899 18.5511 3.49997 18.75 3.49997H20.25C20.4489 3.49997 20.6396 3.57899 20.7803 3.71964C20.921 3.86029 21 4.05106 21 4.24997V9.18947L23.781 11.969C23.9218 12.1098 24.0009 12.3008 24.0009 12.5C24.0009 12.6991 23.9218 12.8901 23.781 13.031C23.6401 13.1718 23.4491 13.2509 23.25 13.2509C23.0508 13.2509 22.8598 13.1718 22.719 13.031L22.5 12.8105V20.75C22.5 21.3467 22.2629 21.919 21.841 22.341C21.419 22.7629 20.8467 23 20.25 23H8.24997C7.65323 23 7.08094 22.7629 6.65898 22.341C6.23702 21.919 5.99997 21.3467 5.99997 20.75V12.8105L5.78097 13.031C5.71124 13.1007 5.62846 13.156 5.53735 13.1938C5.44624 13.2315 5.34859 13.2509 5.24997 13.2509C5.15135 13.2509 5.0537 13.2315 4.9626 13.1938C4.87149 13.156 4.7887 13.1007 4.71897 13.031C4.64924 12.9612 4.59392 12.8785 4.55619 12.7873C4.51845 12.6962 4.49902 12.5986 4.49902 12.5C4.49902 12.4014 4.51845 12.3037 4.55619 12.2126C4.59392 12.1215 4.64924 12.0387 4.71897 11.969L13.1895 3.49997ZM14.25 4.56047L7.49997 11.3105V20.75C7.49997 20.9489 7.57899 21.1396 7.71964 21.2803C7.86029 21.421 8.05106 21.5 8.24997 21.5H20.25C20.4489 21.5 20.6396 21.421 20.7803 21.2803C20.921 21.1396 21 20.9489 21 20.75V11.3105L14.25 4.56047Z"
            fill={isActive ? "#363636" : "#797979"}
          />
        </g>
        <defs>
          <clipPath id="clip0_310_689">
            <rect
              width="24"
              height="24"
              fill="white"
              transform="translate(0 0.5)"
            />
          </clipPath>
        </defs>
      </svg>
    ),
  },
  {
    id: "photo",
    name: "Photo Studio",
    renderIcon: (isActive: boolean) => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="25"
        viewBox="0 0 24 25"
        fill="none"
      >
        <path
          d="M20.33 18.157C20.44 17.791 20.5 17.402 20.5 17V8C20.5 6.93913 20.0786 5.92172 19.3284 5.17157C18.5783 4.42143 17.5609 4 16.5 4H7.5C6.43913 4 5.42172 4.42143 4.67157 5.17157C3.92143 5.92172 3.5 6.93913 3.5 8V17.07C3.51835 18.1187 3.94787 19.1182 4.69604 19.8533C5.4442 20.5884 6.45115 21.0002 7.5 21H16.5L16.617 20.998M20.33 18.157L20.242 18.053L17.776 15.077C17.5889 14.8513 17.3544 14.6694 17.0892 14.5443C16.824 14.4193 16.5346 14.3541 16.2414 14.3533C15.9482 14.3525 15.6584 14.4162 15.3925 14.5399C15.1267 14.6636 14.8913 14.8442 14.703 15.069L13.391 16.635L13.177 16.896M20.33 18.157C20.0874 18.9603 19.5984 19.666 18.932 20.176C18.2657 20.6861 17.4558 20.9736 16.617 20.998M13.177 16.896L16.524 20.892L16.617 20.998M13.177 16.896L9.95 13.043C9.76228 12.819 9.52774 12.6388 9.26288 12.5152C8.99802 12.3916 8.70929 12.3275 8.417 12.3275C8.12471 12.3275 7.83598 12.3916 7.57112 12.5152C7.30626 12.6388 7.07172 12.819 6.884 13.043L3.678 16.87L3.501 17.071"
          stroke="#797979"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"
        />
        <path
          d="M15.0911 10.9091C15.9195 10.9091 16.5911 10.2375 16.5911 9.40906C16.5911 8.58063 15.9195 7.90906 15.0911 7.90906C14.2626 7.90906 13.5911 8.58063 13.5911 9.40906C13.5911 10.2375 14.2626 10.9091 15.0911 10.9091Z"
          fill={isActive ? "#363636" : "#797979"}
        />
      </svg>
    ),
  },
  {
    id: "film",
    name: "Film Studio",
    renderIcon: (isActive: boolean) => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="25"
        viewBox="0 0 24 25"
        fill="none"
      >
        <path
          d="M20.4184 10.5849H7.88249L19.7912 7.30732C19.8655 7.28692 19.9351 7.25139 19.9961 7.20278C20.0571 7.15417 20.1083 7.09344 20.1467 7.02409C20.1851 6.95475 20.21 6.87817 20.2198 6.79876C20.2297 6.71936 20.2243 6.6387 20.2041 6.56146L19.4131 3.52948C19.3175 3.17276 19.0909 2.86966 18.7825 2.68581C18.4741 2.50195 18.1086 2.45213 17.7652 2.54712L3.00075 6.60997C2.8289 6.65649 2.66769 6.73828 2.52654 6.85056C2.38539 6.96284 2.26714 7.10335 2.17872 7.26386C2.0907 7.42145 2.0337 7.59575 2.01106 7.77657C1.98843 7.9574 2.00061 8.14111 2.04689 8.31697L2.77585 11.1246V20.0851C2.77585 20.4603 2.91884 20.8202 3.17334 21.0856C3.42785 21.3509 3.77304 21.5 4.13297 21.5H19.6429C20.0028 21.5 20.348 21.3509 20.6025 21.0856C20.857 20.8202 21 20.4603 21 20.0851V11.1913C21 11.0305 20.9387 10.8762 20.8296 10.7625C20.7206 10.6488 20.5726 10.5849 20.4184 10.5849ZM11.6698 5.47904L14.8687 7.40637L10.7557 8.5383L7.55678 6.61098L11.6698 5.47904ZM18.0677 3.71948C18.1139 3.70611 18.1634 3.71189 18.2056 3.73562C18.2479 3.75935 18.2797 3.7992 18.2945 3.84683L18.9314 6.2906L16.4692 6.96673L13.2702 5.0394L18.0677 3.71948ZM3.1859 7.87026C3.19789 7.84857 3.21393 7.82961 3.23308 7.8145C3.25223 7.7994 3.27409 7.78846 3.29737 7.78233L5.9612 7.04758L9.16012 8.97592L3.8092 10.4515L3.16942 7.99861C3.16371 7.97717 3.16222 7.95474 3.16505 7.93268C3.16789 7.91062 3.17498 7.88938 3.1859 7.87026ZM19.8368 20.0851C19.8368 20.1387 19.8163 20.1901 19.78 20.228C19.7436 20.2659 19.6943 20.2872 19.6429 20.2872H4.13297C4.08155 20.2872 4.03224 20.2659 3.99588 20.228C3.95952 20.1901 3.9391 20.1387 3.9391 20.0851V11.7977H19.8368V20.0851Z"
          fill={isActive ? "#363636" : "#797979"}
        />
      </svg>
    ),
  },
  { id: "warehouse",
    name: "Warehouse", 
    renderIcon: (isActive: boolean) => (
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
      <path d="M22.4403 19.9616H21.5082V3.3312L22.5578 3.02224C22.7029 2.97939 22.8297 2.85902 22.9103 2.6876C22.9909 2.51618 23.0187 2.30774 22.9875 2.10816C22.9564 1.90857 22.8689 1.73417 22.7442 1.62334C22.6196 1.5125 22.468 1.4743 22.3229 1.51714L1.4422 7.67084C1.29708 7.71369 1.17027 7.83406 1.08968 8.00548C1.00909 8.1769 0.981315 8.38534 1.01247 8.58492C1.04362 8.78451 1.13114 8.95891 1.25579 9.06974C1.38043 9.18058 1.53198 9.21878 1.67711 9.17594L2.49183 8.9362V19.9616H1.55965C1.41132 19.9616 1.26905 20.0426 1.16416 20.1869C1.05927 20.3311 1.00035 20.5268 1.00035 20.7308C1.00035 20.9348 1.05927 21.1304 1.16416 21.2747C1.26905 21.419 1.41132 21.5 1.55965 21.5H22.4403C22.5887 21.5 22.7309 21.419 22.8358 21.2747C22.9407 21.1304 22.9997 20.9348 22.9997 20.7308C22.9997 20.5268 22.9407 20.3311 22.8358 20.1869C22.7309 20.0426 22.5887 19.9616 22.4403 19.9616ZM3.61043 8.60544L20.3896 3.66068V19.9616H17.7795V12.5259C17.7795 12.3218 17.7206 12.1262 17.6157 11.9819C17.5108 11.8377 17.3685 11.7566 17.2202 11.7566H6.77983C6.63149 11.7566 6.48923 11.8377 6.38434 11.9819C6.27945 12.1262 6.22052 12.3218 6.22052 12.5259V19.9616H3.61043V8.60544ZM16.6609 15.8591H7.33913V13.2951H16.6609V15.8591ZM7.33913 17.3975H16.6609V19.9616H7.33913V17.3975Z" 
      fill={isActive ? "#363636" : "#797979"}/>
      </svg>
    )
  },
  { id: 'gallery', 
    name: 'Gallery', 
    renderIcon: (isActive: boolean) =>(
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
      <path d="M2.04126 21C1.47958 21 0.999158 20.7889 0.6 20.3667C0.200842 19.9444 0.000842105 19.4378 0 18.8467V7.15333C0 6.56133 0.2 6.05467 0.6 5.63333C1 5.212 1.48 5.00089 2.04 5H13.1179C13.6787 5 14.1587 5.21111 14.5579 5.63333C14.9571 6.05556 15.1571 6.56222 15.1579 7.15333V18.8467C15.1579 19.4387 14.9579 19.9453 14.5579 20.3667C14.1579 20.788 13.6779 20.9991 13.1179 21H2.04126ZM18.7162 11.6667C18.4156 11.6667 18.1684 11.5644 17.9747 11.36C17.7811 11.1556 17.6842 10.8947 17.6842 10.5773V6.08933C17.6842 5.772 17.7811 5.51111 17.9747 5.30667C18.1684 5.10222 18.4156 5 18.7162 5H22.968C23.2686 5 23.5158 5.10222 23.7095 5.30667C23.9032 5.51111 24 5.772 24 6.08933V10.5773C24 10.8956 23.9032 11.1564 23.7095 11.36C23.5158 11.5636 23.2686 11.6658 22.968 11.6667H18.7162ZM18.9474 10.3333H22.7368V6.33333H18.9474V10.3333ZM2.04126 19.6667H13.1179C13.3444 19.6667 13.5305 19.5898 13.6762 19.436C13.8219 19.2822 13.8947 19.0858 13.8947 18.8467V7.15333C13.8947 6.91422 13.8219 6.71778 13.6762 6.564C13.5305 6.41022 13.3444 6.33333 13.1179 6.33333H2.04C1.81347 6.33333 1.62737 6.41022 1.48168 6.564C1.336 6.71778 1.26316 6.91467 1.26316 7.15467V18.8467C1.26316 19.0858 1.336 19.2822 1.48168 19.436C1.62737 19.5898 1.81389 19.6667 2.04126 19.6667ZM2.76884 17.7609H12.3891L9.31579 13.4276L6.94737 16.7609L5.21053 14.3276L2.76884 17.7609ZM18.7162 21C18.4156 21 18.1684 20.8978 17.9747 20.6933C17.7811 20.4889 17.6842 20.228 17.6842 19.9107V15.4227C17.6842 15.1053 17.7811 14.8444 17.9747 14.64C18.1684 14.4356 18.4156 14.3333 18.7162 14.3333H22.968C23.2686 14.3333 23.5158 14.4356 23.7095 14.64C23.9032 14.8444 24 15.1053 24 15.4227V19.9107C24 20.2289 23.9032 20.4898 23.7095 20.6933C23.5158 20.8969 23.2686 20.9991 22.968 21H18.7162ZM18.9474 19.6667H22.7368V15.6667H18.9474V19.6667Z" 
      fill={isActive ? "#363636" : "#797979"}/>
      </svg>
    )
  },
  { id: 'house', 
    name: 'House', 
    renderIcon: (isActive: boolean) => (
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
      <path d="M13.0605 2.74997C12.7792 2.46876 12.3977 2.31079 12 2.31079C11.6022 2.31079 11.2208 2.46876 10.9395 2.74997L0.968971 12.719C0.899239 12.7887 0.843925 12.8715 0.806186 12.9626C0.768447 13.0537 0.749023 13.1514 0.749023 13.25C0.749023 13.3486 0.768447 13.4462 0.806186 13.5373C0.843925 13.6285 0.899239 13.7112 0.968971 13.781C1.1098 13.9218 1.30081 14.0009 1.49997 14.0009C1.59859 14.0009 1.69624 13.9815 1.78735 13.9438C1.87846 13.906 1.96124 13.8507 2.03097 13.781L2.99997 12.8105V20.75C2.99997 21.3467 3.23702 21.919 3.65898 22.341C4.08094 22.7629 4.65323 23 5.24997 23H18.75C19.3467 23 19.919 22.7629 20.341 22.341C20.7629 21.919 21 21.3467 21 20.75V12.8105L21.969 13.781C22.1098 13.9218 22.3008 14.0009 22.5 14.0009C22.6991 14.0009 22.8901 13.9218 23.031 13.781C23.1718 13.6401 23.2509 13.4491 23.2509 13.25C23.2509 13.0508 23.1718 12.8598 23.031 12.719L19.5 9.18947V4.24997C19.5 4.05106 19.421 3.86029 19.2803 3.71964C19.1396 3.57899 18.9489 3.49997 18.75 3.49997H17.25C17.0511 3.49997 16.8603 3.57899 16.7196 3.71964C16.579 3.86029 16.5 4.05106 16.5 4.24997V6.18947L13.0605 2.74997ZM19.5 11.3105V20.75C19.5 20.9489 19.421 21.1396 19.2803 21.2803C19.1396 21.421 18.9489 21.5 18.75 21.5H5.24997C5.05106 21.5 4.86029 21.421 4.71964 21.2803C4.57899 21.1396 4.49997 20.9489 4.49997 20.75V11.3105L12 3.81047L19.5 11.3105Z" 
      fill={
        isActive ? "#363636" : "#797979"}/>
      </svg>
    )
  },
  { id: 'apartment',
    name: 'Apartment', 
    renderIcon: (isActive: boolean) => (
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
      <path d="M7.82922 8.00828C8.08449 8.00828 8.3293 7.90687 8.50981 7.72637C8.69031 7.54586 8.79172 7.30105 8.79172 7.04578C8.79172 6.79051 8.69031 6.54569 8.50981 6.36519C8.3293 6.18468 8.08449 6.08328 7.82922 6.08328C7.57394 6.08328 7.32913 6.18468 7.14863 6.36519C6.96812 6.54569 6.86672 6.79051 6.86672 7.04578C6.86672 7.30105 6.96812 7.54586 7.14863 7.72637C7.32913 7.90687 7.57394 8.00828 7.82922 8.00828ZM8.79172 10.8958C8.79172 11.151 8.69031 11.3959 8.50981 11.5764C8.3293 11.7569 8.08449 11.8583 7.82922 11.8583C7.57394 11.8583 7.32913 11.7569 7.14863 11.5764C6.96812 11.3959 6.86672 11.151 6.86672 10.8958C6.86672 10.6405 6.96812 10.3957 7.14863 10.2152C7.32913 10.0347 7.57394 9.93328 7.82922 9.93328C8.08449 9.93328 8.3293 10.0347 8.50981 10.2152C8.69031 10.3957 8.79172 10.6405 8.79172 10.8958ZM7.82922 15.7083C7.95561 15.7083 8.08077 15.6834 8.19755 15.635C8.31432 15.5866 8.42043 15.5157 8.50981 15.4264C8.59918 15.337 8.67008 15.2309 8.71845 15.1141C8.76682 14.9973 8.79172 14.8722 8.79172 14.7458C8.79172 14.6194 8.76682 14.4942 8.71845 14.3774C8.67008 14.2607 8.59918 14.1546 8.50981 14.0652C8.42043 13.9758 8.31432 13.9049 8.19755 13.8565C8.08077 13.8082 7.95561 13.7833 7.82922 13.7833C7.57394 13.7833 7.32913 13.8847 7.14863 14.0652C6.96812 14.2457 6.86672 14.4905 6.86672 14.7458C6.86672 15.001 6.96812 15.2459 7.14863 15.4264C7.32913 15.6069 7.57394 15.7083 7.82922 15.7083ZM12.6417 7.04578C12.6417 7.30105 12.5403 7.54586 12.3598 7.72637C12.1793 7.90687 11.9345 8.00828 11.6792 8.00828C11.4239 8.00828 11.1791 7.90687 10.9986 7.72637C10.8181 7.54586 10.7167 7.30105 10.7167 7.04578C10.7167 6.79051 10.8181 6.54569 10.9986 6.36519C11.1791 6.18468 11.4239 6.08328 11.6792 6.08328C11.9345 6.08328 12.1793 6.18468 12.3598 6.36519C12.5403 6.54569 12.6417 6.79051 12.6417 7.04578ZM11.6792 11.8583C11.9345 11.8583 12.1793 11.7569 12.3598 11.5764C12.5403 11.3959 12.6417 11.151 12.6417 10.8958C12.6417 10.6405 12.5403 10.3957 12.3598 10.2152C12.1793 10.0347 11.9345 9.93328 11.6792 9.93328C11.4239 9.93328 11.1791 10.0347 10.9986 10.2152C10.8181 10.3957 10.7167 10.6405 10.7167 10.8958C10.7167 11.151 10.8181 11.3959 10.9986 11.5764C11.1791 11.7569 11.4239 11.8583 11.6792 11.8583ZM12.6417 14.7458C12.6417 15.001 12.5403 15.2459 12.3598 15.4264C12.1793 15.6069 11.9345 15.7083 11.6792 15.7083C11.4239 15.7083 11.1791 15.6069 10.9986 15.4264C10.8181 15.2459 10.7167 15.001 10.7167 14.7458C10.7167 14.4905 10.8181 14.2457 10.9986 14.0652C11.1791 13.8847 11.4239 13.7833 11.6792 13.7833C11.9345 13.7833 12.1793 13.8847 12.3598 14.0652C12.5403 14.2457 12.6417 14.4905 12.6417 14.7458ZM15.5292 15.7083C15.6556 15.7083 15.7808 15.6834 15.8975 15.635C16.0143 15.5866 16.1204 15.5157 16.2098 15.4264C16.2992 15.337 16.3701 15.2309 16.4184 15.1141C16.4668 14.9973 16.4917 14.8722 16.4917 14.7458C16.4917 14.6194 16.4668 14.4942 16.4184 14.3774C16.3701 14.2607 16.2992 14.1546 16.2098 14.0652C16.1204 13.9758 16.0143 13.9049 15.8975 13.8565C15.7808 13.8082 15.6556 13.7833 15.5292 13.7833C15.2739 13.7833 15.0291 13.8847 14.8486 14.0652C14.6681 14.2457 14.5667 14.4905 14.5667 14.7458C14.5667 15.001 14.6681 15.2459 14.8486 15.4264C15.0291 15.6069 15.2739 15.7083 15.5292 15.7083ZM4.94172 22.7666C4.77153 22.7666 4.60832 22.699 4.48799 22.5787C4.36765 22.4583 4.30005 22.2951 4.30005 22.1249V4.15828C4.30005 3.64773 4.50286 3.1581 4.86387 2.7971C5.22488 2.43609 5.71451 2.23328 6.22505 2.23328H13.925C14.4356 2.23328 14.9252 2.43609 15.2862 2.7971C15.6472 3.1581 15.85 3.64773 15.85 4.15828V9.93328H17.775C18.2856 9.93328 18.7752 10.1361 19.1362 10.4971C19.4972 10.8581 19.7 11.3477 19.7 11.8583V22.1249C19.7 22.2951 19.6324 22.4583 19.5121 22.5787C19.3918 22.699 19.2286 22.7666 19.0584 22.7666H4.94172ZM5.58338 4.15828V21.4833H8.15005V18.2749C8.15005 18.1048 8.21765 17.9416 8.33799 17.8212C8.45832 17.7009 8.62153 17.6333 8.79172 17.6333H15.2084C15.3786 17.6333 15.5418 17.7009 15.6621 17.8212C15.7824 17.9416 15.85 18.1048 15.85 18.2749V21.4833H18.4167V11.8583C18.4167 11.6881 18.3491 11.5249 18.2288 11.4046C18.1084 11.2842 17.9452 11.2166 17.775 11.2166H15.2084C15.0382 11.2166 14.875 11.149 14.7547 11.0287C14.6343 10.9083 14.5667 10.7451 14.5667 10.5749V4.15828C14.5667 3.9881 14.4991 3.82489 14.3788 3.70455C14.2584 3.58421 14.0952 3.51661 13.925 3.51661H6.22505C6.05487 3.51661 5.89166 3.58421 5.77132 3.70455C5.65099 3.82489 5.58338 3.9881 5.58338 4.15828ZM14.5667 18.9166H12.6417V21.4833H14.5667V18.9166ZM11.3584 18.9166H9.43338V21.4833H11.3584V18.9166Z" 
      fill={
        isActive ? "#363636" : "#797979"}/>
      </svg>
    )},
  { id: 'restaurant', 
    name: 'Restaurant', 
    renderIcon: (isActive: boolean) => (
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
      <path d="M4.8 20.6009L7.5 17.9M14.7 10.7009L13.8 11.6009M14.7 10.7009C14.2095 10.2104 13.9638 9.96472 13.8324 9.70012C13.7093 9.45169 13.6452 9.17818 13.6452 8.90092C13.6452 8.62367 13.7093 8.35016 13.8324 8.10172C13.9638 7.83712 14.2095 7.59142 14.7 7.10092L17.4 4.40092M14.7 10.7009C15.1905 11.1914 15.4362 11.4371 15.7008 11.5685C15.9492 11.6916 16.2227 11.7557 16.5 11.7557C16.7773 11.7557 17.0508 11.6916 17.2992 11.5685C17.5638 11.4371 17.8095 11.1914 18.3 10.7009L21 8.00092M19.2 6.20002L16.5 8.90002M19.2 20.6L12 13.4M12 13.4L3 4.40002C3 7.85782 4.3734 11.1734 6.8187 13.6187L9.3 16.1L12 13.4Z" 
      stroke={
        isActive ? "#363636" : "#797979"
      } stroke-width="1.35" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    ) },
  { id: 'fitness', 
    name: 'Fitness Studio', 
    renderIcon: (isActive: boolean) => (
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
      <path d="M13.5921 21.9L12.6921 21L16.2421 17.45L7.0501 8.25798L3.5001 11.808L2.6001 10.908L4.0391 9.45798L3.1391 8.55798L5.2391 6.45798L3.8391 5.04598L4.5461 4.33898L5.9581 5.73898L8.0581 3.63898L8.9581 4.53898L10.4081 3.09998L11.3081 3.99998L7.7581 7.54998L16.9501 16.742L20.5001 13.192L21.4001 14.092L19.9621 15.542L20.8621 16.442L18.7621 18.542L20.1621 19.954L19.4541 20.662L18.0421 19.262L15.9421 21.362L15.0421 20.462L13.5921 21.9Z" 
      fill={
        isActive ? "#363636" : "#797979"
      }/>
      </svg>
    )},
];

const SearchResultsPage = () => {
  const [uploadedImage, setUploadedImage] = useState<string | null>(null);
  const [activeCategory, setActiveCategory] = useState<string>("All Spaces");

  // Mock data for search results
  const searchResults = Array(15)
    .fill(null)
    .map((_, index) => ({
      id: index + 1,
      title: "Name of the Setting",
      image:
        "https://images.unsplash.com/photo-1600585154340-be6161a56a0c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80",
      similarity: Math.floor(Math.random() * 3) + 1, // Random similarity score between 1-3
    }));

  const handleCategoryClick = (category: string) => {
    setActiveCategory(category);
    // Here you would typically filter results based on the selected category
  };

  return (
    <div className="min-h-screen bg-white">
      {/* Navigation */}
      <Navbar />

      {/* Hero Section */}
      <div className="w-[864px] mx-auto mt-4 mb-4">
        <InputTig />
        {/* Category buttons */}
        <div className="inline-flex items-center justify-center gap-3 w-[864px] mx-auto h-[67px] ">
          {categories.map((category) => (
            <button
              key={category.id}
              onClick={() => handleCategoryClick(category.name)}
              className={`flex flex-col justify-center self-center items-center gap-[9px]  min-w-[80px] ${
                activeCategory === category.name
                  ? "text-theme-gray-100 font-Inter text-xs/normal font-medium not-italic pb-1 border-b-2 border-red-600"
                  : "text-theme-gray-101 font-Inter text-xs/normal font-normal not-italic"
              }`}
            >
              <div className="w-[80px] flex flex-col items-center justify-center gap-[9px]">
                {category.renderIcon(activeCategory === category.name)}
              </div>
              <span className="text-xs">{category.name}</span>
            </button>
          ))}
        </div>
      </div>
      {/* Main Content */}
      <main className=" flex  items-start w-full mx-auto px-6 py-8">
        <div className="flex items-start gap-2">
          {/* Left Sidebar - Uploaded Image */}
          <div className="flex flex-col items-start gap-5 self-stretch">
            <h2 className="text-black font-Manrope text-lg/normal font-medium not-italic">Your Upload</h2>
            <div className="">
              <img
                src="https://s3-alpha-sig.figma.com/img/e273/5c11/0224d043d9444c2632e881ce364aa3f4?Expires=1745193600&Key-Pair-Id=APKAQ4GOSFWCW27IBOMQ&Signature=Bkx35xy1e7ZY61kRePeVMdg8KkvyZU6X9N7FyfCDeESUzfogUv1ymOdRp~RvfVQkGTQbdg5Ze2jOkW10m6oGJ9~S5loKc55kmGxLqTK5t23W~VxYsplvhOLkQXkbBs23r5Hr6t5Vt4xowOc5l46v~8LhhzEYtn7AWlPhKI6JKCkqpT4fh~~Bafu1BTc6K6Boi~BgB4CTtbHFNaCOwTlgTAO0nw-KadlkPWk0zr8t32kIk61g4zttRP5X5QiARYBG9FJTyVSXrNiWRor~1z4KsLDK5~R-fl0NwtjDZpiJytCYQ5Bm6wrd0L2ea5Jx-7-dpWhnV8Ymf04HWrPVgXLWkg__"
                alt="Uploaded"
                className="w-[188.38px]  h-[161px]"
              />
            </div>
            {/* <Link
              to="/image-search"
              className="block w-full bg-red-600 hover:bg-red-700 text-white text-center py-2 px-4 rounded transition duration-300"
            >
              New Search
            </Link> */}
          </div>
            <div className="bg-black   w-1 min-h-full"/>
          {/* Right Content - Search Results */}
          <div className="flex flex-col items-start border-l-2 border-theme-gray-102 pl-4 gap-5 self-stretch w-full">
            <h2 className="text-black font-Manrope text-lg/normal font-medium not-italic">Results</h2>
            <div className="grid grid-cols-6 sm:grid-cols-3 lg:grid-cols-6 gap-3">
              {searchResults.map((result) => (
                <Link
                  key={result.id}
                  to="/location-detail"
                  className=" transition duration-300"
                >
                  <div className="relative">
                    <img
                      src={result.image}
                      alt={result.title}
                      className="w-[188.38px] h-[161px] "
                    />
                    <div className="absolute top-2 right-2 bg-white rounded-full w-6 h-6 flex items-center justify-center text-xs font-bold">
                      {result.similarity}
                    </div>
                  </div>
                  <div className="">
                    <h3 className="  text-sm font-medium text-gray-800">
                      {result.title}
                    </h3>
                  </div>
                </Link>
              ))}
            </div>
          </div>
        </div>
      </main>
    </div>
  );
};

export default SearchResultsPage;
